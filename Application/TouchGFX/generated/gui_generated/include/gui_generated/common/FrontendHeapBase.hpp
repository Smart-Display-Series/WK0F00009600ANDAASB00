/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/screen99_screen/Screen99View.hpp>
#include <gui/screen99_screen/Screen99Presenter.hpp>
#include <gui/screen02_screen/Screen02View.hpp>
#include <gui/screen02_screen/Screen02Presenter.hpp>
#include <gui/screen03_screen/Screen03View.hpp>
#include <gui/screen03_screen/Screen03Presenter.hpp>
#include <gui/screen04_screen/Screen04View.hpp>
#include <gui/screen04_screen/Screen04Presenter.hpp>
#include <gui/screen05_screen/Screen05View.hpp>
#include <gui/screen05_screen/Screen05Presenter.hpp>
#include <gui/screen06_screen/Screen06View.hpp>
#include <gui/screen06_screen/Screen06Presenter.hpp>
#include <gui/screen07_screen/Screen07View.hpp>
#include <gui/screen07_screen/Screen07Presenter.hpp>
#include <gui/screen08_screen/Screen08View.hpp>
#include <gui/screen08_screen/Screen08Presenter.hpp>
#include <gui/screen09_screen/Screen09View.hpp>
#include <gui/screen09_screen/Screen09Presenter.hpp>
#include <gui/screen10_screen/Screen10View.hpp>
#include <gui/screen10_screen/Screen10Presenter.hpp>
#include <gui/screen11_screen/Screen11View.hpp>
#include <gui/screen11_screen/Screen11Presenter.hpp>
#include <gui/screen12_screen/Screen12View.hpp>
#include <gui/screen12_screen/Screen12Presenter.hpp>
#include <gui/screen13_screen/Screen13View.hpp>
#include <gui/screen13_screen/Screen13Presenter.hpp>
#include <gui/screen14_screen/Screen14View.hpp>
#include <gui/screen14_screen/Screen14Presenter.hpp>
#include <gui/screen15_screen/Screen15View.hpp>
#include <gui/screen15_screen/Screen15Presenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Screen99View,
            touchgfx::meta::TypeList< Screen02View,
            touchgfx::meta::TypeList< Screen03View,
            touchgfx::meta::TypeList< Screen04View,
            touchgfx::meta::TypeList< Screen05View,
            touchgfx::meta::TypeList< Screen06View,
            touchgfx::meta::TypeList< Screen07View,
            touchgfx::meta::TypeList< Screen08View,
            touchgfx::meta::TypeList< Screen09View,
            touchgfx::meta::TypeList< Screen10View,
            touchgfx::meta::TypeList< Screen11View,
            touchgfx::meta::TypeList< Screen12View,
            touchgfx::meta::TypeList< Screen13View,
            touchgfx::meta::TypeList< Screen14View,
            touchgfx::meta::TypeList< Screen15View,
            touchgfx::meta::Nil > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Screen99Presenter,
            touchgfx::meta::TypeList< Screen02Presenter,
            touchgfx::meta::TypeList< Screen03Presenter,
            touchgfx::meta::TypeList< Screen04Presenter,
            touchgfx::meta::TypeList< Screen05Presenter,
            touchgfx::meta::TypeList< Screen06Presenter,
            touchgfx::meta::TypeList< Screen07Presenter,
            touchgfx::meta::TypeList< Screen08Presenter,
            touchgfx::meta::TypeList< Screen09Presenter,
            touchgfx::meta::TypeList< Screen10Presenter,
            touchgfx::meta::TypeList< Screen11Presenter,
            touchgfx::meta::TypeList< Screen12Presenter,
            touchgfx::meta::TypeList< Screen13Presenter,
            touchgfx::meta::TypeList< Screen14Presenter,
            touchgfx::meta::TypeList< Screen15Presenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen99ScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
